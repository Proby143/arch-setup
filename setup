#!/bin/bash

clear
setfont Lat2-Terminus16.psfu.gz

# Do an inital check of the user's keyboard map
check_keymap() {
  echo "<SET THE KEYBOARD LAYOUT>"
  echo
  echo "The default keyboard layout is US (QWERTY)."
  echo "If you are not using a US (QWERTY) keyboard, you should now load a \
keymap that corresponds to your keyboard layout."
  echo "To load a different keyboard map, enter 1. To continue using the US \
keyboard layout, press enter."
  echo
  read -p "Enter 1 to select a different keyboard map, otherwise press \
enter: " CHANGE_KEYMAP
  if [ "$CHANGE_KEYMAP" = "1" ]; then
    set_keymap
  fi
}

# Proceed with installation only if there is an internet connection
check_connection() {
  # Only check that the web page is available, don't download the contents
  wget -q --spider archlinux.org
  if [ $? -ne 0 ]; then 
    dialog --title "Connect to the Internet" \
      --msgbox "The installer was unable to detect a working internet \
connection. The installation media supports wired network devices on \
boot. Make sure the cable is plugged in. Wireless users should use the \
'wifi-menu' command and follow the on-screen instructions to connect to \
a wireless connection.\n\nOnce you have a working internet connection, \
retry running the installer." 11 80
    reset ; exit
  fi
}

# Allow the user to select one of the available keyboard maps
set_keymap() {
  keymaps=()
  for map in $(localectl list-keymaps); do
    keymaps+=("$map" "")
  done
  
  KEYMAP=$(dialog --title "Set the keyboard layout" --nocancel \
    --menu "Select a keymap that corresponds to your keyboard layout. The \
default is 'us' (QWERTY). Use the UP/DOWN arrow keys and PageUp/PageDown to \
navigate the list, then press enter to confirm your selection." 30 60 25 \
"${keymaps[@]}" 3>&1 1>&2 2>&3)

  if [ $? -eq 0 ]; then
    localectl set-keymap $KEYMAP
  fi
}

prepare_disk() {
  # List all available block devices excluding 'rom' and 'loop'
  BLOCK_DEVICES=()
  for device in $(lsblk -d -n -p -r -e 7,11 -o NAME); do
    device_size=$(lsblk -d -n -r -o SIZE "$device")
    BLOCK_DEVICES+=("$device" "$device_size")
  done

  while true; do
    PARTITION_LAYOUT=$(dialog --title "Partition the disks" \
      --menu "The installer will now automatically partition a disk for you. \
If you have no preference or are unsure about which partition layout to \
choose, the 'Basic' layout is the simplest and should be enough for most use \
cases.\n\nPartition layout:" 18 85 3 \
"Basic" "Use entire disk" \
"LVM" "Use entire disk and set up LVM" 3>&1 1>&2 2>&3)

    if [ $? -eq 0 ]; then
      DISK=$(dialog --title "Set the installation disk" \
        --menu "Select the disk for Arch Linux to be installed on. Note that \
the disk you select will be erased, but not until you have confirmed the \
changes.\n\nDisk to partition:" 20 55 5 \
"${BLOCK_DEVICES[@]}" 3>&1 1>&2 2>&3)

      if [ $? -eq 0 ]; then
        # NVME & SATA devices have different naming conventions for partitions 
        # TODO: Move this to a different function (formatting?)
        if [[ $DISK == *"nvme"* ]]; then
          if [ -d /sys/firmware/efi ]; then
            DISK_BOOT="${DISK}p1"
            DISK_ROOT="${DISK}p2"
          else
            DISK_ROOT="${DISK}p1"
          fi
        else
          if [ -d /sys/firmware/efi ]; then
            DISK_BOOT="${DISK}1"
            DISK_ROOT="${DISK}2"
          else
           DISK_ROOT="${DISK}1" 
          fi
        fi

        dialog --title "Create a swap partition" \
          --yesno "Would you like to create an optional swap partition? If \
you are unsure, it is recommended to create one." 6 60 

        if [ $? -eq 0 ]; then
          MEM_TOTAL=$(free --giga | awk '/^Mem:/{print $2}')
          if [ "$MEM_TOTAL" = "0" ]; then
            MEM_TOTAL="${MEM_TOTAL}M"
          else
            MEM_TOTAL="${MEM_TOTAL}G"
          fi

          while true; do
            SWAP=$(dialog --title "Allocate swap space" \
              --inputbox "Specify how much swap space to allocate. If you are \
unsure, the default is to have swap space equal to the amount of RAM in your \
system.\n\nSwap partition size (use 'M' for MiB or 'G' for GiB):" 13 80 \
"$MEM_TOTAL" 3>&1 1>&2 2>&3)
            
            if [ $? -eq 0 ]; then
              disk_size_bytes=$(lsblk -b -d -n -o SIZE $DISK)
              disk_size_mibs=$((disk_size_bytes / 1024 / 1024))
              disk_size_gibs=$((disk_size_mibs / 1024))
              swap_size=$(echo "$SWAP" | tr -c -d '[:digit:]')

              # Input validation
              if [ "$(echo "$SWAP" | egrep -o "^[0-9]+[MG]$")" ]; then
                if [ "${SWAP: -1}" = "M" ] && \
                  [ "$swap_size" -lt $(( $disk_size_mibs - 2048 )) ]; then
                  swap_enabled=true
                  break
                elif [ "${SWAP: -1}" = "G" ] && \
                  [ "$swap_size" -lt $(( $disk_size_gibs - 2 )) ]; then
                  swap_enabled=true
                  break
                else
                  dialog --title "ERROR: Not enough disk space" \
                    --msgbox "The amount you entered exceeds the amount of \
space available on the disk. Note that the installer sets aside an additional \
2 GiB to have enough space for the base installation." 8 60
                fi
              else
                dialog --title "ERROR: Invalid format" \
                  --msgbox "You entered an invalid format. Make sure to use \
'M' for 'MiB' or 'G' for 'GiB'." 6 60
              fi
            else
              swap_enabled=false
              SWAP="-"
              break
            fi
          done
        else
          swap_enabled=false
          SWAP="-"
        fi

        dialog --title "Confirm your partition layout" --defaultno \
          --yesno "WARNING: All data on the selected disk will be lost! Make \
sure to review your changes before continuing.\n\nDisk to partition: \
$DISK\nPartition layout: $PARTITION_LAYOUT\nSwap partition: $SWAP\n\nAre you \
sure you want to write the changes to the disk?" 13 60  
        if [ $? -eq 0 ]; then
          case $PARTITION_LAYOUT in
            "Basic") create_basic_layout ;;
          esac
        else
          main_menu
        fi
      fi
    else
      main_menu
    fi
  done
}

create_basic_layout() {
  if [ -d /sys/firmware/efi ]; then
    parted -s $DISK mklabel gpt
    if $swap_enabled; then
      sgdisk -n 1:0:+512M -n 2:0:-$SWAP -n 3:-$SWAP:-0 -t 1:ef00 -t 2:8300 \
        -t 3:8200 $DISK &> /dev/null
    else
      sgdisk -n 1:0:+512M -n 2:0:0 -t 1:ef00 -t 2:8300 $DISK &> /dev/null
    fi
  else
    parted -s $DISK mklabel msdos
    if $swap_enabled; then
      echo -e "n\np\n1\n\n-${SWAP}\nn\np\n2\n\n\nt\n2\n82\nw" | \
        fdisk $DISK &> /dev/null
    else
      echo -e "n\np\n1\n\n\nw" | fdisk $DISK &> /dev/null
    fi
  fi
}

main_menu() {
  while true; do
    menu_choice=$(dialog --title "Arch Linux Installer" \
      --menu "Select an option below using the UP/DOWN keys and SPACE or \
ENTER.\nAlternate keys may also be used: '+', '-', and TAB." 18 72 9 \
"KEYMAP" "Modify your keyboard layout" \
"PARTITION" "Set up your disk partitions" \
"EXIT" "Exit Arch Linux Installer" 3>&1 1>&2 2>&3)

    case "$menu_choice" in
      "KEYMAP") set_keymap ;;
      "PARTITION") prepare_disk ;;
      "EXIT") reset ; exit
    esac
  done
}

main() {
  check_keymap
  check_connection
  prepare_disk
}

main
